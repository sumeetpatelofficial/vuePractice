//function to for font-size in REM
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}
  
@mixin font-size($size) {
  // font-size: $size;
  font-size: calculateRem($size);
}
  
@mixin placeholder {
  &::-webkit-input-placeholder {@content};
  &:-moz-placeholder           {@content};
  &::-moz-placeholder          {@content};
  &:-ms-input-placeholder      {@content};
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    img {
      object-fit: cover;
      height: 100%;
      width: 100%;
      transition: all ease-in-out 0.3s;
    }
  }
}


//mixin for light color's buttons
@mixin button-light-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
  color: $color;
  border-color: $color;
  background-color: rgba($color: $color, $alpha: .2);
  &:hover {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus,
  &.focus {
      color: $color-hover;
      background-color: $active-background;
      border-color: $active-border;
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
        color: $color-hover;
        background-color: $active-background;
        border-color: $active-border;
    }
  }
}

@each $color, $value in $theme-colors {
  .btn-light-#{$color} {
    @include button-light-variant($value);
  }
}